[{"C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\Navbar.js":"1","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\Tours.js":"2","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\MerchCart.js":"3"},{"size":2441,"mtime":1609754433247,"results":"4","hashOfConfig":"5"},{"size":1292,"mtime":1609754433247,"results":"6","hashOfConfig":"5"},{"size":7780,"mtime":1609781340798,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cyt81b",{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"12","messages":"13","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\Navbar.js",[],"C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\Tours.js",[],"C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\MerchCart.js",["15","16","17"],"import React, { useState, useRef } from 'react'\r\nimport './MerchCart.css'\r\nimport { Button } from './Button'\r\n\r\nfunction MerchCart() {\r\n\r\n    const IMAGES = [\r\n        \"twitter-icon.png\",\r\n        \"ctv3_tshirt.png\",\r\n        \"ctv3_hoodie.png\",\r\n        \"erys.jpg\",\r\n        \"syre.jpg\"\r\n    ]\r\n\r\n    const MERCH = [{\r\n        src: \"twitter-icon.png\",\r\n        name: \"TWITTER PIN\",\r\n        price: \"£0.99\"\r\n    }, {\r\n        src: \"ctv3_tshirt.png\",\r\n        name: \"CTV3 T-SHIRT\",\r\n        price: \"£19.99\"\r\n    }]\r\n\r\n    const [cart, setCart] = useState([])\r\n    const [total, setTotal] = useState(0)\r\n\r\n    const removePoundSign = new RegExp('(?<=£).*')\r\n\r\n    function updateTotal(price) {\r\n        console.log(price)\r\n        let numericPrice = price.match(removePoundSign)\r\n        var roundedTotal = +((total + Number(numericPrice[0])).toFixed(2))\r\n        setTotal(roundedTotal)\r\n        console.log(total)\r\n    }\r\n\r\n    function addProductToCart(element) {\r\n        let parent = element.target.parentElement\r\n        var merchInfo = parent.previousElementSibling\r\n        var merchImage = merchInfo.previousElementSibling\r\n        var regex = new RegExp('(?<=Jaden/).*')\r\n        var merchSrc = merchImage.src.match(regex)\r\n        var [productName, productPrice] = merchInfo.children\r\n        var cartProduct = {\r\n            src: merchSrc[0],\r\n            name: productName.innerText,\r\n            price: productPrice.innerText\r\n        }\r\n        console.log(cartProduct)\r\n        console.log(cart)\r\n        for (let i = 0; i < cart.length; i++) {\r\n            console.log(cart[i])\r\n            console.log(cartProduct)\r\n            if (JSON.stringify(cart[i]) === JSON.stringify(cartProduct)) {\r\n                console.log('HERE')\r\n                alert('Item has already been added!')\r\n                return\r\n            }  \r\n        }\r\n        const newCart = [...cart, cartProduct]\r\n        setCart(newCart)\r\n        updateTotal(productPrice.innerText)\r\n    }\r\n\r\n    function removeProductFromCart(element) {\r\n        let parent = element.target.parentElement\r\n        var cartQuantityInfo = parent.parentElement\r\n        var cartProductPrice = cartQuantityInfo.nextElementSibling\r\n        console.log(cartProductPrice)\r\n        var cartProductInfo = cartQuantityInfo.previousElementSibling.previousElementSibling\r\n        var [productImage, productName] = cartProductInfo.children\r\n        var regex = new RegExp('(?<=Jaden/).*')\r\n        var merchSrc = productImage.src.match(regex)\r\n        console.log(merchSrc[0])\r\n        var productToRemove = {\r\n            src: merchSrc[0],\r\n            name: productName.innerText,\r\n            price: cartProductPrice.innerText\r\n        }\r\n        const newCart = []\r\n        for (let i = 0; i < cart.length; i++) {\r\n            if (JSON.stringify(cart[i]) !== JSON.stringify(productToRemove)) {\r\n                newCart.push(cart[i])\r\n            }\r\n        }\r\n        console.log(cart)\r\n        setCart(newCart)\r\n        console.log(newCart)\r\n        var negativePrice = cartProductPrice.innerText.slice(0, 1) + \"-\" + cartProductPrice.innerText.slice(1)\r\n        updateTotal(negativePrice)\r\n    }\r\n\r\n    const [quantity, setQuantity] = useState(1)\r\n\r\n    function changeQuantity (event) {\r\n        var input = event.target\r\n        console.log(input)\r\n        if (isNaN(input.value) || input.value <= 0) {\r\n            input.value = 1\r\n        } else {\r\n            setQuantity(event.target.value)  \r\n        }\r\n    }\r\n\r\n    let refContainers = useRef([])\r\n\r\n    refContainers.current = [0,0,0].map(\r\n        (ref, index) =>   refContainers.current[index] = React.createRef()\r\n    )\r\n\r\n    function selectSize (size) {\r\n        console.log(refContainers.current.length)\r\n        for (var i = 0; i < refContainers.current.length; i++) {\r\n            console.log(refContainers.current)\r\n            refContainers.current[i].className = \"btn btn--size btn--square\"\r\n        }\r\n        refContainers.current[size].className = \"btn btn--size btn--square btn--select\"\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <div className=\"merch-background\">\r\n            <div className=\"merch-wrapper\">\r\n            <h1 className=\"merch-header\">MERCH</h1>\r\n                <div className=\"merch-section\">\r\n                    <div className=\"scroll-box-merch\">\r\n                        {MERCH.map((merch, index) => (\r\n                            <div className=\"merch-product\" key={index}>\r\n                                <img className=\"merch-image\" src={\"./Images - Jaden/\" + merch.src}></img>\r\n                                <div className=\"merch-info\">\r\n                                    <span>{merch.name}</span>\r\n                                    <span>{merch.price}</span>\r\n                                </div>\r\n                                <Button buttonStyle=\"btn--buy\" buttonSize=\"btn--medium\" onClick={addProductToCart.bind(this)}>ADD TO CART</Button>\r\n                            </div> \r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"cart-background\">\r\n            <div className=\"cart-wrapper\">\r\n            <h1 className=\"cart-header\">CART</h1>\r\n                <div className=\"cart-section\">\r\n                    <div className=\"cart-headers\">\r\n                        <span className=\"cart-header-product\">PRODUCT</span>\r\n                        <span>SIZE</span>\r\n                        <span>QUANTITY</span>\r\n                        <span className=\"cart-header-price\">PRICE</span>\r\n                    </div>\r\n                    <div className=\"scroll-box-cart\">\r\n                        {cart.map((product, index) => (\r\n                            <div className=\"cart-products\"\r\n                            key={index}>\r\n                            <div className=\"cart-product\">\r\n                                <img className=\"cart-image\" src={\"./Images - Jaden/\" + product.src}></img>\r\n                                <span className=\"cart-name\">{product.name}</span>\r\n                            </div>\r\n                            <div className=\"cart-size\">\r\n                                <Button ref={(Button) => refContainers.current[0] = Button} buttonStyle=\"btn--size\" buttonSize=\"btn--square\" onClick={() => selectSize(0)}>S</Button>\r\n                                <Button ref={(Button) => refContainers.current[1] = Button} buttonStyle=\"btn--size\" buttonSize=\"btn--square\" buttonState=\"btn--select\" onClick={() => selectSize(1)}>M</Button>\r\n                                <Button ref={(Button) => refContainers.current[2] = Button} buttonStyle=\"btn--size\" buttonSize=\"btn--square\" onClick={() => selectSize(2)}>L</Button>\r\n                            </div>\r\n                            <div className=\"cart-quantity\">\r\n                                <input type=\"number\" value={quantity} onChange={e => changeQuantity(e)}></input>\r\n                                <Button buttonStyle=\"btn--buy\" buttonSize=\"btn--medium\" onClick={removeProductFromCart.bind(this)}>REMOVE</Button>\r\n                            </div>\r\n                            <span className=\"cart-price\">{product.price}</span>\r\n                        </div>\r\n                        ))}\r\n                        {/* <CartProduct src=\"ctv3_hoodie.png\" />   */}\r\n                    </div>\r\n                    <div className=\"total-row\">\r\n                        <span className=\"total-name\">Total</span>\r\n                        <span className=\"total-price\">£{total}</span>\r\n                        <Button buttonStyle=\"btn--buy\" buttonSize=\"btn--medium\">PURCHASE</Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MerchCart\r\n",{"ruleId":"18","severity":1,"message":"19","line":7,"column":11,"nodeType":"20","messageId":"21","endLine":7,"endColumn":17},{"ruleId":"22","severity":1,"message":"23","line":130,"column":33,"nodeType":"24","endLine":130,"endColumn":100},{"ruleId":"22","severity":1,"message":"23","line":157,"column":33,"nodeType":"24","endLine":157,"endColumn":101},"no-unused-vars","'IMAGES' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]