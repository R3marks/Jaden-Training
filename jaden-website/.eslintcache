[{"C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\pages\\Home.js":"1","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\Tours.js":"2","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\TourQuery.js":"3","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\MerchQuery.js":"4","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\ActionButton.js":"5","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\UnknownError.js":"6"},{"size":256,"mtime":1609754433247,"results":"7","hashOfConfig":"8"},{"size":1393,"mtime":1613990822640,"results":"9","hashOfConfig":"8"},{"size":1253,"mtime":1612192197913,"results":"10","hashOfConfig":"8"},{"size":3515,"mtime":1614015948632,"results":"11","hashOfConfig":"8"},{"size":777,"mtime":1614014824046,"results":"12","hashOfConfig":"8"},{"size":877,"mtime":1614015445881,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cyt81b",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\pages\\Home.js",[],"C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\Tours.js",[],"C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\TourQuery.js",[],"C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\MerchQuery.js",["27"],"import React, { useState } from 'react'\r\nimport './MerchQuery.css'\r\nimport { useQuery, useMutation } from '@apollo/client'\r\nimport { GET_MERCH, GET_CART } from '../graphql/Queries'\r\nimport { ADD_TO_CART } from '../graphql/Mutations'\r\nimport ActionButton from './ActionButton'\r\nimport { LinkedButton } from './LinkedButton'\r\nimport UnknownError from './UnknownError'\r\n\r\nfunction MerchQuery(props) {\r\n\r\n    const [isUserSignedIn, setIsUserSignedIn] = useState(true)\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n    const [unknownError, setUnknownError] = useState(null)\r\n\r\n    const { loading, error, data } = useQuery(GET_MERCH,\r\n        { onError: (errors) => {\r\n            // if (errors.message === 'Failed to fetch') {\r\n            //     setErrorMessage('Server Offline')\r\n            // } else {\r\n            //     console.log(JSON.stringify(errors))\r\n            // }\r\n            setUnknownError(errors)\r\n        }\r\n    })\r\n\r\n    const [addToCart, { loading: loadAddToCart }] = useMutation(ADD_TO_CART, {\r\n        update: updateCartWithNewEntry\r\n    })\r\n\r\n    async function updateCartWithNewEntry(cache, { data }) {\r\n        cache.modify({\r\n            fields: {\r\n                allCart() {\r\n                    const newCart = data.addToCart.cartItems\r\n                    cache.writeQuery({\r\n                        query: GET_CART,\r\n                        data: { newCart }\r\n                    })\r\n                } \r\n            }\r\n        })\r\n    }\r\n\r\n    async function addToCartById(event) {\r\n        var prevScrollTop = event.target.parentElement.parentElement.scrollTop\r\n        var merchId = event.target.parentElement.getAttribute('data-key')\r\n        try {\r\n            await addToCart({ variables: {\r\n                idProvided: merchId\r\n            }})\r\n        } catch (errors) {\r\n            if (errors.message === 'User has not logged in') {\r\n                setIsUserSignedIn(false)\r\n            } else {\r\n                console.log(JSON.stringify(errors))\r\n            }\r\n        }\r\n        props.scrollBoxMerch.current.scrollTop = prevScrollTop\r\n    }\r\n\r\n    if (loading) return <h1>Loading...</h1>;\r\n    if (unknownError) return <UnknownError errors={unknownError} />\r\n    if (error && !unknownError) return <h1>Error</h1>\r\n    if (errorMessage) return <h1>{errorMessage}</h1>\r\n\r\n    if (!isUserSignedIn) return (\r\n        <div>\r\n            <h1 className='unauth-message'>You'll need to sign in first before you can add merch to cart</h1>\r\n            <div className='choice-buttons'>\r\n                <ActionButton buttonStyle='btn--buy' buttonSize='btn--large' onClick={() => setIsUserSignedIn(true)}>Keep Browsing</ActionButton>\r\n                <LinkedButton buttonStyle='btn--buy' buttonSize='btn--large' linkTo='/sign-in'>Sign In</LinkedButton>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        data.allMerch.map((merch, index) => (\r\n            <div className=\"merch-product\" key={index} data-key={merch.id} data-item=\"true\">\r\n                <img className=\"merch-image\" alt=\"Merch\" src={merch.src}></img>\r\n                <div className=\"merch-info\">\r\n                    <span>{merch.name}</span>\r\n                    <span>Â£{merch.price}</span>\r\n                </div>\r\n                <ActionButton dataTestId={`addToCart-${merch.id}`} buttonStyle=\"btn--buy\" buttonSize=\"btn--medium\" onClick={addToCartById} disabled={loadAddToCart}>ADD TO CART</ActionButton>\r\n            </div> \r\n        ))\r\n    )\r\n}\r\n\r\nexport default MerchQuery\r\n","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\ActionButton.js",[],"C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\UnknownError.js",[],{"ruleId":"28","severity":1,"message":"29","line":13,"column":26,"nodeType":"30","messageId":"31","endLine":13,"endColumn":41},"no-unused-vars","'setErrorMessage' is assigned a value but never used.","Identifier","unusedVar"]