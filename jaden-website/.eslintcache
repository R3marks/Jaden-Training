[{"C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\App.js":"1","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\pages\\Story.js":"2","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\CartQuery.js":"3","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\MerchQuery.js":"4","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\Auth.js":"5","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\pages\\Merch.js":"6","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\AuthProvider.js":"7","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\SignIn.js":"8","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\MerchSection.js":"9","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\CartSection.js":"10","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\graphql\\Queries.js":"11","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\graphql\\Mutations.js":"12","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\pages\\Tour.js":"13","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\ActionButton.js":"14","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\useAppInit.js":"15","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\Chapter.js":"16","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\SignUp.js":"17","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\Footer.js":"18","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\TourQuery.js":"19","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\Navbar.js":"20","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\pages\\Home.js":"21","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\AppRouter.js":"22","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\pages\\Profile.js":"23","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\ProfileOptions.js":"24","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\pages\\SignIn.js":"25"},{"size":356,"mtime":1613385222017,"results":"26","hashOfConfig":"27"},{"size":302,"mtime":1609754433247,"results":"28","hashOfConfig":"27"},{"size":6384,"mtime":1613583281852,"results":"29","hashOfConfig":"27"},{"size":3176,"mtime":1613668712173,"results":"30","hashOfConfig":"27"},{"size":997,"mtime":1613651273695,"results":"31","hashOfConfig":"27"},{"size":523,"mtime":1613566765225,"results":"32","hashOfConfig":"27"},{"size":703,"mtime":1613394718466,"results":"33","hashOfConfig":"27"},{"size":4443,"mtime":1613652978352,"results":"34","hashOfConfig":"27"},{"size":664,"mtime":1613390277421,"results":"35","hashOfConfig":"27"},{"size":777,"mtime":1613390515797,"results":"36","hashOfConfig":"27"},{"size":746,"mtime":1613667590325,"results":"37","hashOfConfig":"27"},{"size":2461,"mtime":1613668297536,"results":"38","hashOfConfig":"27"},{"size":288,"mtime":1609754433247,"results":"39","hashOfConfig":"27"},{"size":724,"mtime":1613495331876,"results":"40","hashOfConfig":"27"},{"size":794,"mtime":1613385309276,"results":"41","hashOfConfig":"27"},{"size":2583,"mtime":1609754433247,"results":"42","hashOfConfig":"27"},{"size":6342,"mtime":1613653027786,"results":"43","hashOfConfig":"27"},{"size":1500,"mtime":1612192197908,"results":"44","hashOfConfig":"27"},{"size":1253,"mtime":1612192197913,"results":"45","hashOfConfig":"27"},{"size":2755,"mtime":1613650819358,"results":"46","hashOfConfig":"27"},{"size":256,"mtime":1609754433247,"results":"47","hashOfConfig":"27"},{"size":1247,"mtime":1613650836405,"results":"48","hashOfConfig":"27"},{"size":290,"mtime":1613650695812,"results":"49","hashOfConfig":"27"},{"size":2733,"mtime":1613669915927,"results":"50","hashOfConfig":"27"},{"size":258,"mtime":1613650836405,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cyt81b",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\App.js",[],"C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\pages\\Story.js",[],"C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\CartQuery.js",[],"C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\MerchQuery.js",[],"C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\Auth.js",[],"C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\pages\\Merch.js",[],["106","107"],"C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\AuthProvider.js",[],"C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\SignIn.js",["108"],"import React, { useState, useContext } from 'react'\r\nimport './SignIn.css'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useMutation } from '@apollo/client'\r\nimport { SIGN_IN } from '../graphql/Mutations'\r\nimport { AuthContext } from './AuthProvider'\r\n\r\nfunction SignIn() {\r\n\r\n    const history = useHistory()\r\n\r\n    const [eyeIcon, setEyeIcon] = useState(false)\r\n    const [passwordVisibility, setPasswordVisibility] = useState(false)\r\n    const [email, setEmail] = useState('')\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n    const [validEmail, setValidEmail] = useState(true)\r\n    const [validPassword, setValidPassword] = useState(true)\r\n\r\n    const authContext = useContext(AuthContext)\r\n\r\n    const [signIn, { loading: loadSignIn, error: errorSignIn }] = useMutation(SIGN_IN)\r\n\r\n    function togglePasswordVisibility() {\r\n        setEyeIcon(!eyeIcon)\r\n        setPasswordVisibility(!passwordVisibility)\r\n    }\r\n\r\n    async function logIn(event) {\r\n        event.preventDefault()\r\n        var email = event.target.children[1].children[1].value\r\n        var password = event.target.children[3].children[1].value\r\n        var credentials = {\r\n            email: email,\r\n            password: password\r\n        }\r\n        try {\r\n            var result = await signIn({ variables: {\r\n                credentials: credentials \r\n            }})\r\n            console.log(result)\r\n            authContext.setAuthInfo({ userData: result.data.signIn.user })\r\n            history.push('/')\r\n        } catch (errors) {\r\n            const {\r\n                graphQLErrors: [graphQLError],\r\n                networkError,\r\n                message\r\n            } = errors\r\n            if (message === 'Failed to fetch') {\r\n                setErrorMessage('Server Offline')\r\n            } else if (graphQLError) {\r\n                const {\r\n                    message,\r\n                    extensions: {\r\n                        invalidArgs\r\n                    } \r\n                } = graphQLError\r\n                if (invalidArgs === \"Email\") {\r\n                    setValidEmail(false)\r\n                } else if (invalidArgs === 'Password') {\r\n                    setValidPassword(false)\r\n                }\r\n                setErrorMessage(message)\r\n            } else if (networkError) {\r\n                const {\r\n                    result: {\r\n                        errors: [{\r\n                            message,\r\n                            extensions: {\r\n                                exception: {\r\n                                    fieldName\r\n                                }\r\n                            }\r\n                        }]\r\n                    }\r\n                } = networkError\r\n                if (fieldName === 'email') {\r\n                    setValidEmail(false)\r\n                } else if (fieldName === 'password') {\r\n                    setValidPassword(false)\r\n                }\r\n                setErrorMessage(message)\r\n            } else {\r\n                console.log(JSON.stringify(errors))\r\n            }\r\n        }\r\n    }\r\n\r\n    if (loadSignIn) return <h1>Signing In...</h1>\r\n\r\n    return (\r\n        <div className=\"form\">\r\n            <form className=\"auth-inputs\" onSubmit={logIn}>\r\n                <label className=\"form-headers\">Email</label>\r\n                <div className=\"input-rows\">\r\n                    <i className=\"fas fa-user\" />\r\n                    <input value={email} onChange={(event) => setEmail(event.target.value)} type=\"text\" className={validEmail ? 'field' : 'field field-invalid-server'} onClick={() => setValidEmail(true)} />\r\n                </div>\r\n                <label className=\"form-headers\">Password</label>\r\n                <div className=\"input-rows\">\r\n                    <i className=\"fas fa-lock\" />\r\n                    <input type={passwordVisibility ? 'text' : 'password'} className={validPassword ? 'field' : 'field field-invalid-server'} onClick={() => setValidPassword(true)} />\r\n                    <i className={eyeIcon ? 'fas fa-eye' : 'fas fa-eye-slash'} onClick={togglePasswordVisibility} />\r\n                </div>\r\n                <div className=\"error-holder\">\r\n                    {errorMessage && <span className=\"error-message\">{errorMessage}</span>}\r\n                </div>\r\n                <input className=\"sign-in\" type=\"submit\" value=\"Sign In\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignIn\r\n","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\MerchSection.js",[],"C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\CartSection.js",[],"C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\graphql\\Queries.js",[],"C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\graphql\\Mutations.js",[],"C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\pages\\Tour.js",[],"C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\ActionButton.js",[],"C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\useAppInit.js",["109"],"C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\Chapter.js",[],"C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\SignUp.js",["110"],"import React, { useState, useContext } from 'react'\r\nimport './SignIn.css'\r\nimport { useMutation } from '@apollo/client'\r\nimport { SIGN_UP } from '../graphql/Mutations'\r\nimport { AuthContext } from './AuthProvider'\r\n\r\nfunction SignUp() {\r\n\r\n    var emailRegex = new RegExp(/\\S+@\\S+\\.\\S+/)\r\n\r\n    const [eyeIcon, setEyeIcon] = useState(false)\r\n    const [passwordVisibility, setPasswordVisibility] = useState(false)\r\n    const [email, setEmail] = useState('')\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n    const [validEmail, setValidEmail] = useState('field')\r\n    const [validPassword, setValidPassword] = useState('field')\r\n    const [passwordsMatch, setPasswordsMatch] = useState(true)\r\n\r\n    const authContext = useContext(AuthContext)\r\n\r\n    const [signUp, { loading: loadSignIn, error: errorSignIn }] = useMutation(SIGN_UP)\r\n\r\n    function togglePasswordVisibility() {\r\n        setEyeIcon(!eyeIcon)\r\n        setPasswordVisibility(!passwordVisibility)\r\n    }\r\n\r\n    function checkValidityOfEmail(event) {\r\n        if (!emailRegex.test(event.target.value)) {\r\n            setValidEmail('field field-invalid-client')\r\n            setErrorMessage('Email invalid')\r\n        } else {\r\n            setValidEmail('field field-valid-client')\r\n            setErrorMessage(null)\r\n        }\r\n        setEmail(event.target.value)\r\n    }\r\n\r\n    function checkValidityOfPassword(event) {\r\n        if (event.target.value.length < 8) {\r\n            setValidPassword('field field-invalid-client')\r\n            setErrorMessage('Password must be at least 8 characters in length')\r\n        } else {\r\n            setValidPassword('field field-valid-client')\r\n            setErrorMessage(null)\r\n        }\r\n    }\r\n\r\n    async function logIn(event) {\r\n        event.preventDefault()\r\n        var email = event.target.children[1].children[1].value\r\n        var password = event.target.children[3].children[1].value\r\n        var retypedPassword = event.target.children[5].children[1].value\r\n        if (!email || !password) {\r\n            setValidEmail('field field-invalid-client')\r\n            setErrorMessage('Fields cant be empty')\r\n        } else if (password !== retypedPassword) {\r\n            setPasswordsMatch(false)\r\n            setErrorMessage('Passwords do not match')\r\n        } else {\r\n            var credentials = {\r\n                email: email,\r\n                password: password\r\n            }\r\n            try {\r\n                var result = await signUp({ variables: {\r\n                    credentials: credentials \r\n                }})\r\n                console.log(result)\r\n                authContext.setAuthInfo({ userData: result.data.signUp.user })\r\n                console.log(authContext)\r\n            } catch (errors) {\r\n                const {\r\n                    graphQLErrors: [graphQLError],\r\n                    networkError,\r\n                    message\r\n                } = errors\r\n                console.log(graphQLError)\r\n                if (message === 'Failed to fetch') {\r\n                    setErrorMessage('Server Offline')\r\n                } else if (graphQLError) {\r\n                    const {\r\n                        message,\r\n                        extensions: {\r\n                            invalidArgs\r\n                        } \r\n                    } = graphQLError\r\n                    console.log(errors)\r\n                    if (invalidArgs === 'Email') {\r\n                        setValidEmail('field field-invalid-server')\r\n                        setErrorMessage(message)\r\n                    }\r\n                } else if (networkError) {\r\n                    const {\r\n                        result: {\r\n                            errors: [{\r\n                                message,\r\n                                extensions: {\r\n                                    exception: {\r\n                                        fieldName\r\n                                    }\r\n                                }\r\n                            }]\r\n                        }\r\n                    } = networkError\r\n                    if (fieldName === 'email') {\r\n                        setValidEmail('field field-invalid-server')\r\n                    } else if (fieldName === 'password') {\r\n                        setValidPassword('field field-invalid-server')\r\n                    }\r\n                    setErrorMessage(message)\r\n                } else {\r\n                    console.log(errors)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    if (loadSignIn) return <h1>Signing In...</h1>\r\n\r\n    return (\r\n        <div className=\"form\">\r\n            <form className=\"auth-inputs\" onSubmit={logIn}>\r\n                <label className=\"form-headers\">Email</label>\r\n                <div className=\"input-rows\">\r\n                    <i className=\"fas fa-user\" />\r\n                    <input type=\"text\" value={email} onChange={(event) => checkValidityOfEmail(event)} onClick={() => setValidEmail('field')} className={validEmail} />\r\n                </div>\r\n                <label className=\"form-headers\">New Password</label>\r\n                <div className=\"input-rows\">\r\n                    <i className=\"fas fa-lock\" />\r\n                    <input type={passwordVisibility ? 'text' : 'password'} className={validPassword} onChange={(event) => checkValidityOfPassword(event)} onClick={() => setValidPassword('field')} />\r\n                    <i className={eyeIcon ? 'fas fa-eye' : 'fas fa-eye-slash'} onClick={togglePasswordVisibility} />\r\n                </div>\r\n                <label className=\"form-headers\">Retype Password</label>\r\n                <div className=\"input-rows\">\r\n                    <i className=\"fas fa-lock\" />\r\n                    <input type={passwordVisibility ? 'text' : 'password'} onClick={() => setPasswordsMatch(true)} className={passwordsMatch ? 'field' : 'field field-invalid-client'} />\r\n                    <i className={eyeIcon ? 'fas fa-eye' : 'fas fa-eye-slash'} onClick={togglePasswordVisibility} />\r\n                </div>\r\n                <div className=\"error-holder\">\r\n                    {errorMessage && <span className=\"error-message\">{errorMessage}</span>}\r\n                </div>\r\n                <input className=\"sign-in\" type=\"submit\" value=\"Sign Up\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp\r\n","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\Footer.js",["111"],"C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\TourQuery.js",[],"C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\Navbar.js",[],"C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\pages\\Home.js",[],"C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\AppRouter.js",[],"C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\pages\\Profile.js",[],"C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\ProfileOptions.js",["112"],"import React, { useEffect, useContext } from 'react'\r\nimport './ProfileOptions.css'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { AuthContext } from './AuthProvider'\r\nimport ActionButton from './ActionButton'\r\nimport { useApolloClient, useLazyQuery, useMutation } from '@apollo/client'\r\nimport { GET_CART } from '../graphql/Queries'\r\nimport { SIGN_OUT } from '../graphql/Mutations'\r\n\r\nfunction ProfileOptions() {\r\n\r\n    const history = useHistory()\r\n    const { authInfo, setAuthInfo } = useContext(AuthContext)\r\n\r\n    const client = useApolloClient()\r\n\r\n    const [getUsersCart, { data }] = useLazyQuery(GET_CART, {\r\n        fetchPolicy: 'no-cache'\r\n    })\r\n    const [signOutUser, { loading }] = useMutation(SIGN_OUT)\r\n\r\n    useEffect(() => {\r\n        getUsersCart()\r\n    }, [authInfo])\r\n\r\n    function handleGoToCart() {\r\n        history.push('/merch')\r\n    }\r\n\r\n    async function handleSignOut() {\r\n        try {\r\n            await signOutUser()\r\n            await client.resetStore()\r\n            setAuthInfo({ userData: null })\r\n            history.push('/')\r\n        } catch (errors) {\r\n            console.log(errors)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='profile-background'>\r\n            <div className=\"profile-wrapper\">\r\n                <div className=\"profile-headers\">\r\n                    <h1 className='profile-header'>PROFILE</h1>\r\n                </div>\r\n                <div className=\"profile-section\">\r\n                    <div className=\"profile-section-wrapper\">\r\n                        <h1 className=\"profile-subsection-header\">Email Address</h1>\r\n                        <div className=\"profile-row\">\r\n                            <i className=\"fas fa-at\" />\r\n                            <h2 className=\"profile-info\">{data ? data.allCart.user.email : 'hmm'}</h2>\r\n                            <ActionButton buttonSize='btn--medium' buttonStyle='btn--buy'>DELETE PROFILE</ActionButton>\r\n                        </div>\r\n                        <h1 className=\"profile-subsection-header\">Cart</h1>\r\n                        <div className=\"profile-row\">\r\n                            <i className=\"fas fa-shopping-cart\" />\r\n                            <h2 className=\"profile-info\">£{data ? data.allCart.total : 0.00}</h2>\r\n                            <ActionButton buttonSize='btn--medium' buttonStyle='btn--buy' onClick={handleGoToCart}>GO TO CART</ActionButton>\r\n                        </div>\r\n                        <ActionButton buttonSize='btn--large' buttonStyle='btn--buy' onClick={handleSignOut} disabled={loading}>SIGN OUT</ActionButton>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileOptions\r\n","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\pages\\SignIn.js",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":21,"column":50,"nodeType":"119","messageId":"120","endLine":21,"endColumn":61},{"ruleId":"117","severity":1,"message":"121","line":7,"column":36,"nodeType":"119","messageId":"120","endLine":7,"endColumn":41},{"ruleId":"117","severity":1,"message":"118","line":21,"column":50,"nodeType":"119","messageId":"120","endLine":21,"endColumn":61},{"ruleId":"117","severity":1,"message":"122","line":4,"column":10,"nodeType":"119","messageId":"120","endLine":4,"endColumn":22},{"ruleId":"123","severity":1,"message":"124","line":24,"column":8,"nodeType":"125","endLine":24,"endColumn":18,"suggestions":"126"},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'errorSignIn' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'LinkedButton' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUsersCart'. Either include it or remove the dependency array.","ArrayExpression",["129"],"no-global-assign","no-unsafe-negation",{"desc":"130","fix":"131"},"Update the dependencies array to be: [authInfo, getUsersCart]",{"range":"132","text":"133"},[788,798],"[authInfo, getUsersCart]"]