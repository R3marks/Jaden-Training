[{"C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\App.js":"1","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\pages\\Story.js":"2","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\CartQuery.js":"3","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\MerchQuery.js":"4","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\Auth.js":"5","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\pages\\Merch.js":"6","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\AuthProvider.js":"7","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\SignIn.js":"8","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\Profile.js":"9","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\MerchSection.js":"10","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\CartSection.js":"11","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\graphql\\Queries.js":"12","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\graphql\\Mutations.js":"13","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\pages\\Tour.js":"14","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\ActionButton.js":"15"},{"size":356,"mtime":1613385222017,"results":"16","hashOfConfig":"17"},{"size":302,"mtime":1609754433247,"results":"18","hashOfConfig":"17"},{"size":6866,"mtime":1613497544656,"results":"19","hashOfConfig":"17"},{"size":3304,"mtime":1613411047889,"results":"20","hashOfConfig":"17"},{"size":625,"mtime":1613409574820,"results":"21","hashOfConfig":"17"},{"size":548,"mtime":1613409547859,"results":"22","hashOfConfig":"17"},{"size":703,"mtime":1613394718466,"results":"23","hashOfConfig":"17"},{"size":4391,"mtime":1613386352123,"results":"24","hashOfConfig":"17"},{"size":858,"mtime":1613409517584,"results":"25","hashOfConfig":"17"},{"size":664,"mtime":1613390277421,"results":"26","hashOfConfig":"17"},{"size":777,"mtime":1613390515797,"results":"27","hashOfConfig":"17"},{"size":668,"mtime":1613486312997,"results":"28","hashOfConfig":"17"},{"size":2300,"mtime":1613497469079,"results":"29","hashOfConfig":"17"},{"size":288,"mtime":1609754433247,"results":"30","hashOfConfig":"17"},{"size":724,"mtime":1613495331876,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cyt81b",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\App.js",[],"C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\pages\\Story.js",[],"C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\CartQuery.js",["66","67","68","69","70","71","72","73","74"],"import React, { useEffect, useState, useRef } from 'react'\r\nimport './CartQuery.css'\r\nimport { useQuery, useMutation } from '@apollo/client'\r\nimport { GET_CART } from '../graphql/Queries'\r\nimport { ADD_TO_CART, PURCHASE_CART, REMOVE_FROM_CART, UPDATE_QUANTITY } from '../graphql/Mutations'\r\nimport ActionButton from './ActionButton'\r\n\r\nfunction CartQuery() {\r\n\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n    const [sizeArray, setSizeArray] = useState(['', 'btn--select', ''])\r\n    const [disabledButton, setDisabledButton] = useState(false)\r\n    const scrollBoxCart = useRef(null)\r\n\r\n    const { loading, error, data } = useQuery(GET_CART, \r\n        { onError: (errors) => {\r\n            if (errors.message === 'Failed to fetch') {\r\n                setErrorMessage('Server Offline')\r\n            } else {\r\n                console.log(JSON.stringify(errors))\r\n            }\r\n        }\r\n    })\r\n    console.log(data)\r\n\r\n    const [removeFromCart, \r\n        { loading: loadRemoveFromCart, error: errorRemoveFromCart }] = useMutation(REMOVE_FROM_CART, {\r\n        update: updateCartWithRemovedEntry\r\n    })\r\n\r\n    const [updateQuantity, \r\n        { loading: loadUpdateQuantity, error: errorUpdateQuantity }] = useMutation(UPDATE_QUANTITY, {\r\n            update: updateCartWithUpdatedEntry\r\n        })\r\n\r\n    const [purchaseCart, \r\n        { loading: loadPurchaseCart, error: errorPurchaseCart}] = useMutation(PURCHASE_CART, {\r\n            update: updateCartWithPurchase\r\n    })\r\n\r\n    function updateCartWithRemovedEntry(cache, { data }) {\r\n        cache.modify({\r\n            fields: {\r\n                allCart() {\r\n                    const newCart = data.removeFromCart.cart\r\n                    cache.writeQuery({\r\n                        query: GET_CART,\r\n                        data: { newCart }\r\n                    })\r\n                }    \r\n            }\r\n        })\r\n    }\r\n\r\n    function updateCartWithUpdatedEntry(cache, { data }) {\r\n        cache.modify({\r\n            fields: {\r\n                allCart() {\r\n                    const newCart = data.updateCart.cart\r\n                    cache.writeQuery({\r\n                        query: GET_CART,\r\n                        data: { newCart }\r\n                    })\r\n                }    \r\n            }\r\n        })\r\n    }\r\n\r\n    function updateCartWithPurchase(cache, { data }) {\r\n        cache.modify({\r\n            fields: {\r\n                allCart() {\r\n                    const newCart = data.purchaseCart.cart\r\n                    cache.writeQuery({\r\n                        query: GET_CART,\r\n                        data: { newCart }\r\n                    })\r\n                }    \r\n            }\r\n        })\r\n    }\r\n\r\n    function selectSize(size) {\r\n        let newSizeArray = ['', '', '']\r\n        newSizeArray[size] = 'btn--select'\r\n        setSizeArray(newSizeArray)\r\n    }\r\n\r\n    async function removeProductFromCart(event) {\r\n        var prevScrollTop = event.target.parentElement.parentElement.parentElement.scrollTop\r\n        var cartId = event.target.parentElement.parentElement.getAttribute('data-key')\r\n        try {\r\n            await removeFromCart({ variables: {\r\n                idProvided: cartId\r\n            }})\r\n        } catch (errors) {\r\n            console.log(JSON.stringify(errors))\r\n        }\r\n        scrollBoxCart.current.scrollTop = prevScrollTop\r\n    }\r\n\r\n    function changeQuantity(event) {\r\n        var input = event.target\r\n        var id = event.target.parentElement.parentElement.getAttribute('data-key')\r\n        console.log(id)\r\n        if (isNaN(input.value) || input.value <= 0) {\r\n            input.value = 1\r\n        } else { \r\n            input.value = Math.round(input.value)\r\n        }\r\n        updateQuantity({ variables: {\r\n            idProvided: id, newQuantity: parseInt(input.value)\r\n        }})\r\n    }\r\n\r\n    function purchaseMessage() {\r\n        purchaseCart()\r\n        alert(\"Purchase Completed\")\r\n    }\r\n\r\n    // Queries need to be handled better. It doesnt make sense to re-render everytime you change the quantity\r\n\r\n    if (loading) return <h1 className=\"empty-cart\">Loading...</h1>;\r\n    if (error) return <h1 className=\"empty-cart\">{errorMessage}</h1>\r\n    // if (loadRemoveFromCart || loadUpdateQuantity) return <h1 className=\"empty-cart\">Removing From Cart...</h1>\r\n    // if (error && error.networkError) return <h1 className='empty-cart'>Server Offline</h1>\r\n    // if (error && error.graphQLErrors) return <h1 className=\"empty-cart\">Log in to access cart</h1>\r\n    // if (errorRemoveFromCart || errorUpdateQuantity) return <h1 className=\"empty-cart\">Error! ${JSON.stringify(error, errorRemoveFromCart, errorUpdateQuantity)}</h1>\r\n    if (data.allCart.cartItems && data.allCart.cartItems.length === 0) return <h1 className=\"empty-cart\">Your cart is empty</h1>\r\n    // if (loadPurchaseCart) return <h1>Test</h1>\r\n    // if (errorPurchaseCart) return <h1>Test</h1>\r\n\r\n    return (\r\n        <>\r\n        <div ref={scrollBoxCart} className=\"scroll-box-cart\">\r\n            {data.allCart.cartItems.map((product, index) => (\r\n                <div className=\"cart-products\"\r\n                key={index} data-key={product.id}>\r\n                    <div className=\"cart-product\">\r\n                        <img className=\"cart-image\" alt=\"Cart\" src={product.src}></img>\r\n                        <span className=\"cart-name\">{product.name}</span>\r\n                    </div>\r\n                    <div className=\"cart-size\">\r\n                        <ActionButton buttonStyle=\"btn--size\" buttonSize=\"btn--square\" select={sizeArray[0]} onClick={() => selectSize(0)}>S</ActionButton>\r\n                        <ActionButton buttonStyle=\"btn--size\" buttonSize=\"btn--square\" select={sizeArray[1]} onClick={() => selectSize(1)}>M</ActionButton>\r\n                        <ActionButton buttonStyle=\"btn--size\" buttonSize=\"btn--square\" select={sizeArray[2]} onClick={() => selectSize(2)}>L</ActionButton>\r\n                    </div>\r\n                    <div className=\"cart-quantity\">\r\n                        <input type=\"number\" value={product.quantity} onChange={changeQuantity}></input>\r\n                        <ActionButton buttonStyle=\"btn--buy\" buttonSize=\"btn--medium\" onClick={removeProductFromCart} disabled={loadRemoveFromCart ? true : false}>REMOVE</ActionButton>\r\n                    </div>\r\n                    <span className=\"cart-price\">£{(product.price * product.quantity).toFixed(2)}</span>\r\n                </div>\r\n            ))}\r\n        </div>    \r\n        <div className=\"total-row\">\r\n            <span className=\"total-name\">Total</span>\r\n            <span className=\"total-price\">£{data.allCart.total.toFixed(2)}</span>\r\n            <ActionButton buttonStyle=\"btn--buy\" buttonSize=\"btn--medium\" onClick={purchaseMessage}>PURCHASE</ActionButton>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CartQuery\r\n","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\MerchQuery.js",["75","76"],"C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\Auth.js",["77"],"import React, { useContext } from 'react'\r\nimport './Auth.css'\r\nimport SignIn from './Unauthenticated'\r\nimport { AuthContext } from './AuthProvider'\r\nimport Profile from './Profile'\r\nimport Unauthenticated from './Unauthenticated'\r\n\r\nfunction Auth() {\r\n\r\n    const { isAuthenticated } = useContext(AuthContext)\r\n    var result = isAuthenticated()\r\n    console.log(result)\r\n\r\n    return (\r\n        <div className=\"auth-background\">\r\n            <div className=\"auth-wrapper\">\r\n            { result ? <Profile /> :\r\n                    <Unauthenticated />}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Auth\r\n","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\pages\\Merch.js",[],"C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\AuthProvider.js",[],"C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\SignIn.js",["78"],"import React, { useState, useContext } from 'react'\r\nimport { useMutation } from '@apollo/client'\r\nimport { SIGN_IN } from '../graphql/Mutations'\r\nimport { AuthContext } from './AuthProvider'\r\n\r\nfunction SignIn() {\r\n\r\n    const [eyeIcon, setEyeIcon] = useState(false)\r\n    const [passwordVisibility, setPasswordVisibility] = useState(false)\r\n    const [email, setEmail] = useState('')\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n    const [validEmail, setValidEmail] = useState(true)\r\n    const [validPassword, setValidPassword] = useState(true)\r\n\r\n    const authContext = useContext(AuthContext)\r\n\r\n    const [signIn, { loading: loadSignIn, error: errorSignIn }] = useMutation(SIGN_IN)\r\n\r\n    function togglePasswordVisibility() {\r\n        setEyeIcon(!eyeIcon)\r\n        setPasswordVisibility(!passwordVisibility)\r\n    }\r\n\r\n    async function logIn(event) {\r\n        event.preventDefault()\r\n        var email = event.target.children[1].children[1].value\r\n        var password = event.target.children[3].children[1].value\r\n        var credentials = {\r\n            email: email,\r\n            password: password\r\n        }\r\n        try {\r\n            var result = await signIn({ variables: {\r\n                credentials: credentials \r\n            }})\r\n            console.log(result)\r\n            authContext.setAuthInfo({ userData: result.data.signIn.user })\r\n        } catch (errors) {\r\n            const {\r\n                graphQLErrors: [graphQLError],\r\n                networkError,\r\n                message\r\n            } = errors\r\n            if (message === 'Failed to fetch') {\r\n                setErrorMessage('Server Offline')\r\n            } else if (graphQLError) {\r\n                const {\r\n                    message,\r\n                    extensions: {\r\n                        invalidArgs\r\n                    } \r\n                } = graphQLError\r\n                if (invalidArgs === \"Email\") {\r\n                    setValidEmail(false)\r\n                } else if (invalidArgs === 'Password') {\r\n                    setValidPassword(false)\r\n                }\r\n                setErrorMessage(message)\r\n            } else if (networkError) {\r\n                const {\r\n                    result: {\r\n                        errors: [{\r\n                            message,\r\n                            extensions: {\r\n                                exception: {\r\n                                    fieldName\r\n                                }\r\n                            }\r\n                        }]\r\n                    }\r\n                } = networkError\r\n                if (fieldName === 'email') {\r\n                    setValidEmail(false)\r\n                } else if (fieldName === 'password') {\r\n                    setValidPassword(false)\r\n                }\r\n                setErrorMessage(message)\r\n            } else {\r\n                console.log(JSON.stringify(errors))\r\n            }\r\n        }\r\n    }\r\n\r\n    if (loadSignIn) return <h1>Signing In...</h1>\r\n    // if (errorSignIn && errorSignIn.networkError) return <h1> {errorMessage}</h1>\r\n\r\n    return (\r\n        <div className=\"form\">\r\n            <form className=\"auth-inputs\" onSubmit={logIn}>\r\n                <label className=\"form-headers\">Email</label>\r\n                <div className=\"input-rows\">\r\n                    <i className=\"fas fa-user\" />\r\n                    <input value={email} onChange={(event) => setEmail(event.target.value)} type=\"text\" className={validEmail ? 'field' : 'field field-invalid-server'} onClick={() => setValidEmail(true)} />\r\n                </div>\r\n                <label className=\"form-headers\">Password</label>\r\n                <div className=\"input-rows\">\r\n                    <i className=\"fas fa-lock\" />\r\n                    <input type={passwordVisibility ? 'text' : 'password'} className={validPassword ? 'field' : 'field field-invalid-server'} onClick={() => setValidPassword(true)} />\r\n                    <i className={eyeIcon ? 'fas fa-eye' : 'fas fa-eye-slash'} onClick={togglePasswordVisibility} />\r\n                </div>\r\n                <div className=\"error-holder\">\r\n                    {errorMessage && <span className=\"error-message\">{errorMessage}</span>}\r\n                </div>\r\n                <input className=\"sign-in\" type=\"submit\" value=\"Sign In\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignIn\r\n","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\Profile.js",["79","80"],"import React, { useContext } from 'react'\r\nimport { AuthContext } from './AuthProvider'\r\nimport ActionButton from './ActionButton'\r\nimport { useMutation } from '@apollo/client'\r\nimport { SIGN_OUT } from '../graphql/Mutations'\r\n\r\nfunction Profile() {\r\n\r\n    const { setAuthInfo } = useContext(AuthContext)\r\n    const [signOutUser, { loading, error }] = useMutation(SIGN_OUT)\r\n\r\n    async function handleSignOut() {\r\n        await signOutUser()\r\n        setAuthInfo({ userData: null })\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"auth-headers\">\r\n            <h1 className='auth-header' >PROFILE</h1>\r\n        </div>\r\n        <div className=\"auth-section\">\r\n            <ActionButton buttonSize='btn--large' buttonStyle='btn--buy' onClick={handleSignOut}>Sign out</ActionButton>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\MerchSection.js",[],"C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\CartSection.js",[],"C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\graphql\\Queries.js",[],"C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\graphql\\Mutations.js",[],"C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\pages\\Tour.js",[],"C:\\Users\\micha\\OneDrive\\Documents\\Training\\Web Dev\\Jaden-Training\\jaden-website\\src\\components\\ActionButton.js",[],{"ruleId":"81","severity":1,"message":"82","line":1,"column":17,"nodeType":"83","messageId":"84","endLine":1,"endColumn":26},{"ruleId":"81","severity":1,"message":"85","line":5,"column":10,"nodeType":"83","messageId":"84","endLine":5,"endColumn":21},{"ruleId":"81","severity":1,"message":"86","line":12,"column":12,"nodeType":"83","messageId":"84","endLine":12,"endColumn":26},{"ruleId":"81","severity":1,"message":"87","line":12,"column":28,"nodeType":"83","messageId":"84","endLine":12,"endColumn":45},{"ruleId":"81","severity":1,"message":"88","line":27,"column":47,"nodeType":"83","messageId":"84","endLine":27,"endColumn":66},{"ruleId":"81","severity":1,"message":"89","line":32,"column":20,"nodeType":"83","messageId":"84","endLine":32,"endColumn":38},{"ruleId":"81","severity":1,"message":"90","line":32,"column":47,"nodeType":"83","messageId":"84","endLine":32,"endColumn":66},{"ruleId":"81","severity":1,"message":"91","line":37,"column":20,"nodeType":"83","messageId":"84","endLine":37,"endColumn":36},{"ruleId":"81","severity":1,"message":"92","line":37,"column":45,"nodeType":"83","messageId":"84","endLine":37,"endColumn":62},{"ruleId":"81","severity":1,"message":"93","line":16,"column":20,"nodeType":"83","messageId":"84","endLine":16,"endColumn":33},{"ruleId":"81","severity":1,"message":"94","line":16,"column":42,"nodeType":"83","messageId":"84","endLine":16,"endColumn":56},{"ruleId":"81","severity":1,"message":"95","line":3,"column":8,"nodeType":"83","messageId":"84","endLine":3,"endColumn":14},{"ruleId":"81","severity":1,"message":"96","line":17,"column":50,"nodeType":"83","messageId":"84","endLine":17,"endColumn":61},{"ruleId":"81","severity":1,"message":"97","line":10,"column":27,"nodeType":"83","messageId":"84","endLine":10,"endColumn":34},{"ruleId":"81","severity":1,"message":"98","line":10,"column":36,"nodeType":"83","messageId":"84","endLine":10,"endColumn":41},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'ADD_TO_CART' is defined but never used.","'disabledButton' is assigned a value but never used.","'setDisabledButton' is assigned a value but never used.","'errorRemoveFromCart' is assigned a value but never used.","'loadUpdateQuantity' is assigned a value but never used.","'errorUpdateQuantity' is assigned a value but never used.","'loadPurchaseCart' is assigned a value but never used.","'errorPurchaseCart' is assigned a value but never used.","'loadAddToCart' is assigned a value but never used.","'errorAddToCart' is assigned a value but never used.","'SignIn' is defined but never used.","'errorSignIn' is assigned a value but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used."]